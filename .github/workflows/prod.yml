name: Production Deployment

on:
  release:
    types:
      - released
      - prereleased
  workflow_dispatch:

jobs:
  build_and_deploy_staging:
    outputs:
      image: ${{ env.IMAGE }}
      tag: ${{ env.TAG }}
      release_version: ${{ env.version }}

    runs-on: ubuntu-latest
    env:
      image: cranecloud/cranecloud-cms
      namespace: cranecloud-prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Get version
        id: version
        run: |
          if [[ $GITHUB_EVENT_NAME == "release" ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "version=dev-$(date +'%Y%m%d')-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          fi
      - name: Install (Buildx)
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login (GCP)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.CREDENTIALS_JSON }}

      - name: Install (Gcloud)
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: crane-cloud-274413
          install_components: 'gke-gcloud-auth-plugin'

      - name: Get Kubernetes credentials
        run: |
          gcloud container clusters get-credentials staging-cluster --zone us-central1-a

      - id: meta
        name: Tag
        uses: docker/metadata-action@v3
        with:
          flavor: |
            latest=auto
            prefix=
          images: ${{ env.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Add Env vars
        env:
          SANITY_STUDIO_PROJECT_ID: ${{ secrets.SANITY_STUDIO_PROJECT_ID }}
          SANITY_STUDIO_DATASET: ${{ secrets.SANITY_STUDIO_DATASET }}
        run: |
          chmod +x ./.github/workflows/bin/create_envs.sh
          ./.github/workflows/bin/create_envs.sh

      - name: Build
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - id: export
        name: Export
        uses: actions/github-script@v7
        with:
          script: |
            const metadata = JSON.parse(`${{ steps.meta.outputs.json }}`)
            const fullUrl = metadata.tags.find((t) => t.includes(':sha-'))
            if (fullUrl == null) {
              core.error('Unable to find sha tag of image')
            } else {
              const tag = fullUrl.split(':')[1]
              core.exportVariable('IMAGE', fullUrl)
              core.exportVariable('TAG', tag)
            }

      - name: Update deployment image
        run: |
          kubectl set image deployment/cranecloud-cms cranecloud-cms=${{ env.image }}:${{ env.TAG }} -n $namespace

      - name: Verify deployment
        run: |
          echo "Waiting for deployment to roll out..."
          kubectl rollout status deployment/cranecloud-cms -n $namespace --timeout=300s

          echo "Verifying deployment health..."
          kubectl get pods -n $namespace -l app=cranecloud-cms -o wide

          # Add basic health check
          POD_NAME=$(kubectl get pods -n $namespace -l app=cranecloud-cms -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -n $namespace $POD_NAME -- curl -f http://localhost:80/health || exit 1

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
